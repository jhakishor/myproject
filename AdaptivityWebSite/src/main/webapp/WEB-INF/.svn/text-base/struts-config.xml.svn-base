<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE struts-config PUBLIC "-//Apache Software Foundation//DTD Struts Configuration 1.2//EN"
                               "http://jakarta.apache.org/struts/dtds/struts-config_1_2.dtd">
	<!--
		This is a blank Struts configuration file with an example welcome
		action/page and other commented sample elements. Tiles and the Struts
		Validator are configured using the factory defaults and are
		ready-to-use. NOTE: If you have a generator tool to create the
		corresponding Java classes for you, you could include the details in
		the "form-bean" declarations. Otherwise, you would only define the
		"form-bean" element itself, with the corresponding "name" and "type"
		attributes, as shown here.
	-->
<struts-config>
	<data-sources />
	<!--
		============================================ Data Source Configuration
		<data-sources> <data-source
		type="org.apache.commons.dbcp.BasicDataSource"> <set-property
		property="driverClassName" value="org.postgresql.Driver" />
		<set-property property="url"
		value="jdbc:postgresql://localhost/mydatabase" /> <set-property
		property="username" value="me" /> <set-property property="password"
		value="test" /> <set-property property="maxActive" value="10" />
		<set-property property="maxWait" value="5000" /> <set-property
		property="defaultAutoCommit" value="false" /> <set-property
		property="defaultReadOnly" value="false" /> <set-property
		property="validationQuery" value="SELECT COUNT(*) FROM market" />
		</data-source> </data-sources>
		================================================ Form Bean Definitions
	-->
	<form-beans>
		<!--
			sample form bean descriptor for an ActionForm <form-bean
			name="inputForm" type="app.InputForm"/> end sample sample form bean
			descriptor for a DynaActionForm <form-bean name="logonForm"
			type="org.apache.struts.action.DynaActionForm"> <form-property
			name="username" type="java.lang.String"/> <form-property
			name="password" type="java.lang.String"/> </form-bean> end sample
		-->
		<form-bean name="UserLoginForm"
			type="com.adaptivity.blueprint4it.web.struts.form.UserLoginForm" />
		<form-bean name="UserRegisterForm"
			type="com.adaptivity.blueprint4it.web.struts.form.UserRegisterForm" />
		<form-bean name="UserForgetPasswordForm"
			type="com.adaptivity.blueprint4it.web.struts.form.UserForgetPasswordForm" />
		<form-bean name="ChangePasswordForm"
			type="com.adaptivity.blueprint4it.web.struts.form.ChangePasswordForm" />
	</form-beans>
	<!--
		========================================= Global Exception Definitions
	-->
	<global-exceptions>
		<!--
			sample exception handler <exception key="expired.password"
			type="app.ExpiredPasswordException" path="/changePassword.jsp"/> end
			sample
		-->
	</global-exceptions>
	<!--
		=========================================== Global Forward Definitions
	-->
	<global-forwards>
		<!--
			Default forward to "Welcome" action Demonstrates using index.jsp to
			forward
		-->
		<forward name="welcome" path="/Welcome.do" />
		<forward name="websiteDown" path="/pages/error.jsp" />
	</global-forwards>
	<!--
		=========================================== Action Mapping Definitions
	-->
	<action-mappings>
		<!-- Default "Welcome" action 
 Forwards to Home.jsp -->
		<action path="/logout" scope="request"
			type="com.adaptivity.blueprint4it.web.struts.action.LogoutAction">
			<forward name="success" path="/Welcome.do" />
		</action>
		<action path="/Welcome" scope="request"
			type="com.adaptivity.blueprint4it.web.struts.action.WelcomeAction">
			<forward name="success" path="/pages/home.jsp" />
			<forward name="changePassword" path="/pages/user/changepassword.jsp" />
			<forward name="changePasswordFromLink" path="/pages/user/changepassword.jsp?forward=changePasswordFromLink" />
			<forward name="failure" path="/pages/home.jsp" />
			<forward name="aboutUs" path="/pages/user/aboutUs.jsp" />
			<forward name="resources" path="/resources.do" />
			<forward name="product" path="/pages/user/product.jsp" />
			<forward name="solution" path="/pages/user/solution.jsp" />
			<forward name="designScience" path="/pages/user/designScience.jsp" />
			<forward name="loginSuccess" path="/pages/user/loginsuccess.jsp" />
			<forward name="forgetPassword" path="/pages/user/forgetpassword.jsp" />
			<forward name="contactUs" path="/contactUs.jsp" />
			
			<!--
				<forward name="forgetPasswordSuccess" path="/pages/home.jsp"/>
				<forward name="changePasswordSuccess" path="/pages/home.jsp"/>
			-->
		</action>
		<action input="/pop.jsp" name="UserLoginForm" path="/userlogin"
			scope="request" type="com.adaptivity.blueprint4it.web.struts.action.UserLoginAction"
			validate="true">
			<forward name="success" path="/pop.jsp" />
			<forward name="failure" path="/pop.jsp" />
			<forward name="successOfDownload" path="/Welcome.do?forward=loginSuccess" />
			<forward name="successOfDownloadAndAlreadyLoggedIn" path="/Welcome.do" />
			<forward name="failureOfDownload" path="/Welcome.do?forward=failure" />
			<forward name="changePasswordFromLink" path="/Welcome.do?forward=changePasswordFromLink" />
			

		</action>
		<action input="/pop.jsp" name="UserRegisterForm" path="/userregister"
			scope="request"
			type="com.adaptivity.blueprint4it.web.struts.action.UserRegisterAction"
			validate="true">
			<forward name="success" path="/pop.jsp" />
			<forward name="failure" path="/pop.jsp" />
			<forward name="input" path="/pop.jsp" />
			<forward name="updated" path="/pages/user/updatesuccess.jsp" />
		</action>
		<action input="/pages/user/forgetpassword.jsp" name="UserForgetPasswordForm"
			path="/userforgetpassword" scope="request"
			type="com.adaptivity.blueprint4it.web.struts.action.UserForgetPasswordAction"
			validate="true">
			<forward name="success" path="/Welcome.do?forward=forgetPasswordSuccess" />
			<forward name="failure" path="/pages/user/forgetpassword.jsp" />
		</action>
		<action input="/pages/user/changepassword.jsp" name="ChangePasswordForm"
			path="/changepassword" scope="request"
			type="com.adaptivity.blueprint4it.web.struts.action.ChangePasswordAction"
			validate="true">
			<forward name="success" path="/logout.do?forward=changePasswordSuccess" />
			<forward name="failure" path="/pages/user/changepassword.jsp" />
		</action>
		<action input="/pages/user/resources.jsp"
			path="/thoughtLeadershipResources" scope="request"
			type="com.adaptivity.blueprint4it.web.struts.action.ThoughtLeadershipAction"
			validate="false">
			<forward name="success" path="/pages/user/resources.jsp" />
			<forward name="failure" path="/pages/user/resources.jsp" />
			<forward name="ceoBLog" path="/pages/user/ceoBlog.jsp" />
			<forward name="blueprintBlog" path="/pages/user/blueprintBlog.jsp" />
		</action>
		<action input="/pages/user/resources.jsp"
			path="/resources" scope="request"
			type="com.adaptivity.blueprint4it.web.struts.action.ResourcesAction"
			validate="false">
			<forward name="success" path="/pages/user/resources.jsp" />
			<forward name="failure" path="/pages/user/resources.jsp" />
		</action>
		<action path="/fileDownload" name="FileDownloadActionMapping"
			type="com.adaptivity.blueprint4it.web.struts.action.FileDownloadAction">
			<!--
				<set-property property="filePath" value="C:\Adaptivity
				doc\blueprint\blueprint_images\blueprint_images\algorithym.jpg" />
				<set-property property="contentType" value="image/jpg" />
			-->
		</action>

	</action-mappings>
	<!--
		============================================= Controller Configuration
	-->
	<controller processorClass="org.apache.struts.tiles.TilesRequestProcessor" />
	<!--
		======================================== Message Resources Definitions
	-->
	<message-resources parameter="MessageResources" />
	<!--
		=============================================== Plug Ins Configuration
		======================================================= Tiles plugin
		This plugin initialize Tiles definition factory. This later can takes
		some parameters explained here after. The plugin first read parameters
		from web.xml, thenoverload them with parameters defined here. All
		parameters are optional. The plugin should be declared in each
		struts-config file. - definitions-config: (optional) Specify
		configuration file names. There can be several comma separated file
		names (default: ?? ) - moduleAware: (optional - struts1.1) Specify if
		the Tiles definition factory is module aware. If true (default), there
		will be one factory for each Struts module. If false, there will be
		one common factory for all module. In this later case, it is still
		needed to declare one plugin per module. The factory will be
		initialized with parameters found in the first initialized plugin
		(generally the one associated with the default module). true : One
		factory per module. (default) false : one single shared factory for
		all modules - definitions-parser-validate: (optional) Specify if xml
		parser should validate the Tiles configuration file. true : validate.
		DTD should be specified in file header (default) false : no validation
		Paths found in Tiles definitions are relative to the main context.
	-->
	<plug-in className="org.apache.struts.tiles.TilesPlugin">
		<!-- Path to XML definition file -->
		<set-property property="definitions-config" value="/WEB-INF/tiles-defs.xml" />
		<!-- Set Module-awareness to true -->
		<set-property property="moduleAware" value="true" />
	</plug-in>
	<!--
		=================================================== Validator plugin
	-->
	<plug-in className="org.apache.struts.validator.ValidatorPlugIn">
		<set-property property="pathnames"
			value="/WEB-INF/validator-rules.xml,/WEB-INF/validation.xml" />
	</plug-in>
</struts-config>
